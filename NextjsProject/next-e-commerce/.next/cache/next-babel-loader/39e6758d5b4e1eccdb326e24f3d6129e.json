{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useEffect, useState } from \"react\";\nimport { auth, db } from \"../config/firebase\";\n\nvar useOrders = function useOrders() {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchFromFirestore() {\n      return _fetchFromFirestore.apply(this, arguments);\n    }\n\n    function _fetchFromFirestore() {\n      _fetchFromFirestore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                auth.currentUser && db.collection(\"Users\").doc(auth.currentUser.uid).get().then(function (doc) {\n                  var orders = doc.data().orders;\n                  console.log(orders);\n\n                  if (orders) {\n                    db.collection(\"Orders\").get().then(function (querySnapshot) {\n                      var ordersArray = querySnapshot.docs.filter(function (doc) {\n                        return orders.includes(doc.id);\n                      }).map(function (doc) {\n                        return _objectSpread(_objectSpread({\n                          id: doc.id\n                        }, doc.data()), {}, {\n                          date: doc.data().date.toDate()\n                        });\n                      });\n                      setData(ordersArray);\n                      setLoading(false);\n                    });\n                  }\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchFromFirestore.apply(this, arguments);\n    }\n\n    fetchFromFirestore();\n  }, [auth.currentUser]);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n};\n\nexport { useOrders };","map":null,"metadata":{},"sourceType":"module"}