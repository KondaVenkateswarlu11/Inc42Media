{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { db } from \"@/config/firebase\";\nimport { useState, useEffect } from \"react\";\n\nvar useProduct = function useProduct(id) {\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(null),\n      error = _useState3[0],\n      setError = _useState3[1];\n\n  useEffect(function () {\n    function fetchFromFirestore() {\n      return _fetchFromFirestore.apply(this, arguments);\n    }\n\n    function _fetchFromFirestore() {\n      _fetchFromFirestore = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                db.collection(\"Products\").doc(id).get().then(function (doc) {\n                  setData(doc.data());\n                  setLoading(false);\n                })[\"catch\"](function (e) {\n                  return setError(e);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchFromFirestore.apply(this, arguments);\n    }\n\n    fetchFromFirestore();\n  }, [id]);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n};\n\nvar useCategoryProducts = function useCategoryProducts(category) {\n  var _useState4 = useState([]),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var _useState5 = useState(true),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  var _useState6 = useState(null),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  useEffect(function () {\n    function fetchFromFirestore() {\n      return _fetchFromFirestore2.apply(this, arguments);\n    }\n\n    function _fetchFromFirestore2() {\n      _fetchFromFirestore2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                db.collection(\"Products\").where(\"category\", \"==\", category).get().then(function (querySnapshot) {\n                  var products = querySnapshot.docs.map(function (doc) {\n                    return _objectSpread({\n                      id: doc.id\n                    }, doc.data());\n                  });\n                  setData(products);\n                  setLoading(false);\n                })[\"catch\"](function (e) {\n                  return setError(e);\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return _fetchFromFirestore2.apply(this, arguments);\n    }\n\n    fetchFromFirestore();\n  }, [category]);\n  return {\n    data: data,\n    loading: loading,\n    error: error\n  };\n};\n\nexport { useProduct, useCategoryProducts };","map":null,"metadata":{},"sourceType":"module"}