{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport styles from \"./input.module.scss\";\nexport default function Input(_ref) {\n  var register = _ref.register,\n      _ref$required = _ref.required,\n      required = _ref$required === void 0 ? true : _ref$required,\n      error = _ref.error,\n      noMargin = _ref.noMargin,\n      props = _objectWithoutProperties(_ref, [\"register\", \"required\", \"error\", \"noMargin\"]);\n\n  var _useState = useState(false),\n      focus = _useState[0],\n      setFocus = _useState[1];\n\n  return /*#__PURE__*/_jsx(\"input\", _objectSpread({\n    className: styles.container,\n    style: {\n      borderColor: error && \"red\",\n      backgroundColor: focus && \"white\",\n      margin: noMargin && 0\n    },\n    ref: register && register({\n      required: required\n    }),\n    onFocus: function onFocus() {\n      return setFocus(true);\n    },\n    onBlur: function onBlur() {\n      return setFocus(false);\n    }\n  }, props));\n}","map":null,"metadata":{},"sourceType":"module"}